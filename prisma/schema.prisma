generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
}

model Brand {
  id        String   @id @default(uuid())
  brand     String   @unique
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
}

model Product {
  id          String     @id @default(uuid())
  description String
  price       Decimal
  model       String
  salePrice   Decimal
  stock       Int
  brandId     String
  categoryId  String
  taxValue    Decimal
  isLive      Boolean    @default(true)
  isFeatured  Boolean    @default(false)
  brand       Brand      @relation(fields: [brandId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  images      Image[]
  category    Category   @relation(fields: [categoryId], references: [id])
  cart        Cart[]
  wishlist    Wishlist[]
}

model Image {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Slider {
  id        String   @id @default(uuid())
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id         String   @id @default(uuid())
  quantityId Int
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Wishlist {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
