generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(GUEST)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  categoryId   String    @id @default(uuid())
  categoryName String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  product      Product[]
}

model Brand {
  brandId       String    @id @default(uuid())
  brandName     String
  brandImageUrl String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  product       Product[]
}

model Product {
  id          String     @id @default(uuid())
  description String
  price       Decimal
  model       String
  salePrice   Decimal    @db.Decimal(10, 2)
  stock       Int
  brandId     String
  categoryId  String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isFeatured  Boolean    @default(false)
  isLive      Boolean    @default(true)
  taxValue    Decimal
  cart        Cart[]
  images      Image[]
  brand       Brand      @relation(fields: [brandId], references: [brandId])
  category    Category   @relation(fields: [categoryId], references: [categoryId])
  wishlist    Wishlist[]
}

model Image {
  id        String   @id @default(uuid())
  productId String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Slider {
  id        String   @id @default(uuid())
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id         String   @id @default(uuid())
  quantityId Int
  productId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id])
}

model Wishlist {
  id        String   @id @default(uuid())
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

enum Role {
  GUEST
  USER
  ADMIN
}
